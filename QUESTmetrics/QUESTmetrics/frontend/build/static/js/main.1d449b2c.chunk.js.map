{"version":3,"sources":["utils/fetch.js","pages/Home.js","pages/Group.js","pages/Class.js","pages/Classes.js","pages/SurveyInstructor.js","pages/SurveyStudent.js","about.svg","pages/About.js","pages/Settings.js","pages/Main.js","utils/usePersistedState.js","pages/App.js","index.js"],"names":["fetchRedGroups","a","token","window","localStorage","headers","Headers","Authorization","get","method","fetch","response","json","data","fetchWatchedGroups","fetchAllGroups","fetchGroupsInClass","classname","fetchStudentsInGroup","groupname","fetchAllClasses","fetchWeight","fetchSurvey","fetchGroupHealth","watchGroup","post","console","log","postMetrics","metrics","put","url","URL","postWeight","Object","keys","forEach","key","searchParams","append","postSurvey","questions","surveyClass","classes","del","headers2","obj","body","JSON","stringify","mode","c","text","postSurveyStudentAnswers","answers","dirid","jwt_decode","getClassesofStudent","Home","useState","redGroups","setRedGroups","watchedGroups","setWatchedGroups","students","useRouteMatch","useEffect","then","redGroupsData","map","g","groupId","name","watch","className","groupHealth","to","watchedGroupsData","cssClass","redGroupsNotWatched","q","index","s","exact","path","Group","studentsInGroup","setStudents","groupColor","setGroupColor","useParams","health","firstName","lastName","directoryId","uid","vislinks","onoffswitch","state","class","type","id","tabindex","checked","onClick","for","style","background","color","borderRadius","padding","includes","trigger","title","width","height","seamless","frameBorder","scrolling","src","Class","groupsInClass","setGroups","active","setActive","classID","setNameOfClass","collapse","document","querySelector","visibility","toString","toUpperCase","overflow","opacity","transition","getElementById","innerHTML","marginBottom","fontWeight","groupsInClassData","display","alignItems","fontSize","margin","border","Classes","setClasses","loaded","setLoaded","classesData","SurveyInstructor","setQuestions","setSurveyClass","history","useHistory","saved","classSelected","setClassSelected","handleSave","e","empty","i","length","trim","push","handleAdd","question","selectClass","onChange","target","value","handleSelectClass","onSubmit","Question","autoComplete","allQuestions","handleQuestionInput","placeholder","splice","handleRemove","SurveyStudent","props","setAnswers","selectedClass","setSelectedClass","responded","setResponded","qs","cs","questionObjects","preventDefault","newResponded","select","newAnswers","handleClassID","allAnswers","answer","handleAnswer","surveyQuestions","About","image","href","Settings","setMetrics","removeElements","elms","el","remove","postWeights","sum","values","reduce","b","Number","querySelectorAll","success","createElement","innerText","appendChild","error","settings","metric","charAt","slice","str","isNaN","newMetrics","handleWeightChange","Navbar","routes","Component","Main","privilege","page","usePersistedState","defaultValue","React","getItem","setState","setItem","App","setId","setPrivilege","setToken","onFail","alert","fetchToken","token_url","res","r","access_token","loginbutton","cursor","justifyContent","textAlign","clientId","buttonText","onSuccess","googleUser","splitEmail","getBasicProfile","getEmail","split","onFailure","render","renderProps","disabled","ReactDOM"],"mappings":"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","file":"static/js/main.1d449b2c.chunk.js","sourcesContent":["import jwt_decode from 'jwt-decode';\n\n//const token =\n//\t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDczODU2NDcsIm5iZiI6MTYwNzM4NTY0NywianRpIjoiMDg3ZDllZjMtZGI1OC00Nzg1LWExODUtNzk3YjQwY2NlZmQ2IiwiZXhwIjoxNjA3NDcyMDQ3LCJpZGVudGl0eSI6eyJkaXJlY3RvcnlJZCI6InJvaGl0aHYiLCJwcml2aWxlZ2UiOiJhZG1pbiJ9LCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.8hUy9hS9au0SxmO_NENldBptqyQNfwUL6aoLZZvWLFA';\n//console.log(window.localStorage.token, 'this the student token');\n\n//* CRUD w/ auth token //\n\n//const headers = new Headers({ Authorization: `Bearer ${token}` });\n//const get = { method: 'GET', headers: headers };\n//const put = { method: 'PUT', headers: headers };\n//const post = { method: 'POST', headers: headers };\n//const del = { method: 'DELETE', headers: headers };\n\n//* GET //\n\nexport const fetchRedGroups = async () => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(`http://valerian.cs.umd.edu:5000/groups/red`, get);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchWatchedGroups = async () => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(`http://valerian.cs.umd.edu:5000/groups/watching`, get);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchAllGroups = async () => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(`http://valerian.cs.umd.edu:5000/groups`, get);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchGroupsInClass = async classname => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(\n\t\t`http://valerian.cs.umd.edu:5000/groups/class/${classname}`,\n\t\tget\n\t);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchStudentsInGroup = async groupname => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(\n\t\t`http://valerian.cs.umd.edu:5000/students/group/${groupname}`,\n\t\tget\n\t);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchAllClasses = async () => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(`http://valerian.cs.umd.edu:5000/classes`, get);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchWeight = async () => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(`http://valerian.cs.umd.edu:5000/weights`, get);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchSurvey = async classname => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(\n\t\t`http://valerian.cs.umd.edu:5000/survey/questions/class/${classname}`,\n\t\tget\n\t);\n\tconst data = await response.json();\n\treturn data;\n};\n\nexport const fetchGroupHealth = async groupname => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst get = { method: 'GET', headers: headers };\n\tconst response = await fetch(\n\t\t`http://valerian.cs.umd.edu:5000/group/health/${groupname}`,\n\t\tget\n\t);\n\tconst data = await response.json();\n\treturn data;\n};\n\n//* DELETE //\nexport const deleteWeight = async metrics => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst del = { method: 'DELETE', headers: headers };\n\tconst url = new URL(`http://valerian.cs.umd.edu:5000/weights`);\n\tconst response = await fetch(url, del);\n\t// console.log(response);\n};\n\n//* POST //\n\nexport const watchGroup = async groupname => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst post = { method: 'POST', headers: headers };\n\tconst response = await fetch(\n\t\t`http://valerian.cs.umd.edu:5000/group/watch/${groupname}`,\n\t\tpost\n\t);\n\tconsole.log(response);\n};\n\nexport const postMetrics = async metrics => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst put = { method: 'PUT', headers: headers };\n\tconst url = new URL(`http://valerian.cs.umd.edu:5000/metrics`);\n\t// Object.keys(metrics).forEach(key => url.searchParams.append(key, metrics[key]));\n\tconst response = await fetch(url, put);\n\t// console.log(response);\n};\n\nexport const postWeight = async metrics => {\n\tconst token = window.localStorage.token;\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst put = { method: 'PUT', headers: headers };\n\t// console.log(metrics);\n\tconst url = new URL(`http://valerian.cs.umd.edu:5000/weights`);\n\tObject.keys(metrics).forEach(key => url.searchParams.append(key, metrics[key]));\n\tconst response = await fetch(url, put);\n\t// console.log(response);\n};\n\nexport const postSurvey = async (questions, surveyClass) => {\n\tconst token = window.localStorage.token;\n\tconst classes = ['BMGT390H', 'BMGT438A', 'BMGT490H'];\n\tconst headers = new Headers({ Authorization: `Bearer ${token}` });\n\tconst del = { method: 'DELETE', headers: headers };\n\tconst headers2 = new Headers({\n\t\tAuthorization: `Bearer ${token}`,\n\t\t'Content-Type': 'application/json',\n\t});\n\tconst obj = {\n\t\tmethod: 'POST',\n\t\theaders: headers2,\n\t\tbody: JSON.stringify(questions),\n\t\tmode: 'cors',\n\t};\n\n\tif (surveyClass == 'ALL') {\n\t\tclasses.forEach(async c => {\n\t\t\tconsole.log('pls');\n\t\t\tconst url = new URL(`http://valerian.cs.umd.edu:5000/survey/class/${c}`);\n\t\t\tawait fetch(url, del); // delete existing surveys\n\t\t\tconst response = await fetch(url, obj); // post new survey\n\t\t\tconsole.log(response);\n\t\t});\n\t} else {\n\t\tconst url = new URL(`http://valerian.cs.umd.edu:5000/survey/class/${surveyClass}`);\n\t\tawait fetch(url, del); // delete existing survey\n\t\tconst response = await fetch(url, obj); // post new survey\n\t\tconsole.log(response.text());\n\t}\n};\n\nexport const postSurveyStudentAnswers = async (classname, answers, token) => {\n\t//const token = window.localStorage.token;\n\tconst dirid = jwt_decode(token)['identity']['directoryId'];\n\n\tconst headers2 = new Headers({\n\t\tAuthorization: `Bearer ${token}`,\n\t\t'Content-Type': 'application/json',\n\t});\n\tconst obj = { method: 'PUT', headers: headers2, body: JSON.stringify(answers) };\n\n\tconsole.log(answers);\n\n\tconst response = await fetch(\n\t\t`http://valerian.cs.umd.edu:5000/survey/class/${classname}/student/directoryId/${dirid}`,\n\t\tobj\n\t);\n\tconsole.log(response);\n};\n\nexport const getClassesofStudent = async () => {\n\tconst dirid = jwt_decode(window.localStorage.token)['identity']['directoryId'];\n\n\tconst headers = new Headers({ Authorization: `Bearer ${window.localStorage.token}` });\n\n\t// console.log(dirid, 'this the student dirid');\n\tconst response = await fetch(\n\t\t`http://valerian.cs.umd.edu:5000/classes/student/directoryId/${dirid}`,\n\t\t{ method: 'GET', headers }\n\t);\n\n\tconst data = await response.json();\n\treturn data;\n};\n","import React, { useState, useEffect } from 'react';\nimport { NavLink, Route, useRouteMatch } from 'react-router-dom';\n\nimport { fetchRedGroups, fetchWatchedGroups, fetchSurvey } from '../utils/fetch';\n\nconst Home = () => {\n\tconst [redGroups, setRedGroups] = useState({});\n\tconst [watchedGroups, setWatchedGroups] = useState({});\n\tconst [questions, setQuestions] = useState([]);\n\tconst [students, setStudents] = useState([]);\n\tconst { url } = useRouteMatch();\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tawait fetchRedGroups().then(data => setRedGroups(data));\n\t\t\tawait fetchWatchedGroups().then(data => setWatchedGroups(data));\n\t\t\t// await fetchSurvey().then(data => {\n\t\t\t// \tconst { questions, students } = data;\n\t\t\t// \tsetQuestions(questions);\n\t\t\t// \tsetStudents(students);\n\t\t\t// });\n\t\t})();\n\t}, [url]);\n\n\tconst redGroupsData = Object.keys(redGroups).map(g => {\n\t\tconst { groupId, name, className, watch, groupHealth } = redGroups[g];\n\t\tif (watch === 0)\n\t\t\treturn (\n\t\t\t\t<NavLink className=\"redGroup\" key={groupId} to={`/classes/all/${name}`}>\n\t\t\t\t\t{name}\n\t\t\t\t</NavLink>\n\t\t\t);\n\t\telse return null;\n\t});\n\n\tconst watchedGroupsData = Object.keys(watchedGroups).map(g => {\n\t\tconst { groupId, name, className, watch, groupHealth } = watchedGroups[g];\n\t\tlet cssClass = 'watchedGroup';\n\t\tswitch (groupHealth) {\n\t\t\tcase 1:\n\t\t\t\tcssClass += ' red';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcssClass += ' yellow';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcssClass += ' green';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcssClass += '';\n\t\t}\n\t\treturn (\n\t\t\t<NavLink className={cssClass} key={groupId} to={`/classes/all/${name}`}>\n\t\t\t\t{name}\n\t\t\t</NavLink>\n\t\t);\n\t});\n\n\tconst key = questions.map((q, index) => (\n\t\t<div className=\"key-home\">\n\t\t\t<div className=\"key\">\n\t\t\t\t{' '}\n\t\t\t\tQ{index + 1}: {q}{' '}\n\t\t\t</div>\n\t\t</div>\n\t));\n\tconst questionNumbersMap = questions.map((q, index) => (\n\t\t<div className=\"question-home\">Q{index + 1}</div>\n\t));\n\tconst studentsMap = students.map(s => (\n\t\t<div className=\"studentobj\">\n\t\t\t<div className=\"studentname\">\n\t\t\t\t{s['lastName']}, {s['firstName']}\n\t\t\t</div>\n\t\t\t<div className=\"studentanswers\">\n\t\t\t\t{s['answers'].map(a => (\n\t\t\t\t\t<div className=\"studentanswer\"> {a} </div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t));\n\n\tvar redGroupsNotWatched = 0;\n\tredGroupsData.map(g =>\n\t\tg != null ? redGroupsNotWatched++ : (redGroupsNotWatched += 0)\n\t);\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<Route exact path={url}>\n\t\t\t\t<h1>Home</h1>\n\t\t\t\t<div className=\"red\">\n\t\t\t\t\t{redGroupsNotWatched === 0 ? (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Red Groups</h2>\n\t\t\t\t\t\t\t<div className=\"redGroups\"> {redGroupsData} </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"watched\">\n\t\t\t\t\t<h2>Watchlist</h2>\n\t\t\t\t\t<div className=\"watchedGroups\"> {watchedGroupsData} </div>\n\t\t\t\t</div>\n\t\t\t\t{/* <hr className=\"hr\" />\n\t\t\t\t<h2 className=\"results\">Survey Results</h2>\n\t\t\t\t<div className=\"survey-results\">\n\t\t\t\t\t<h4>Key</h4>\n\t\t\t\t\t{key}\n\t\t\t\t\t<div className=\"questionobj\">\n\t\t\t\t\t\t<div className=\"question-title\">Results</div>\n\t\t\t\t\t\t<div className=\"questions-home\"> {questionNumbersMap} </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className=\"answers-home\"> {studentsMap} </div>\n\t\t\t\t</div> */}\n\t\t\t</Route>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport Collapsible from 'react-collapsible';\nimport {\n\tfetchStudentsInGroup,\n\tfetchWatchedGroups,\n\twatchGroup,\n\tfetchGroupHealth,\n} from '../utils/fetch';\n\nconst Group = () => {\n\tconst [studentsInGroup, setStudents] = useState({});\n\tconst [watchedGroups, setWatchedGroups] = useState({});\n\tconst [groupColor, setGroupColor] = useState(null);\n\tconst { groupname } = useParams();\n\tconst { url } = useRouteMatch();\n\n\t// useEffect(() => window.location.reload(), []);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tawait fetchStudentsInGroup(groupname).then(data => setStudents(data));\n\t\t\tawait fetchWatchedGroups().then(data => setWatchedGroups(data));\n\t\t\tawait fetchGroupHealth(groupname).then(data => {\n\t\t\t\tconst health = data['result'];\n\t\t\t\tif (health == 1) setGroupColor('indianred');\n\t\t\t\telse if (health == 2) setGroupColor('khaki');\n\t\t\t\telse setGroupColor('lightgreen');\n\t\t\t});\n\t\t})();\n\t}, [url, watchedGroups, groupname]);\n\n\tconst students = Object.keys(studentsInGroup).map(s => {\n\t\tconst { firstName, lastName, directoryId, uid } = studentsInGroup[s];\n\t\treturn (\n\t\t\t<div className=\"studentInGroup\">\n\t\t\t\t<div>\n\t\t\t\t\t{lastName}, {firstName}\n\t\t\t\t</div>\n\t\t\t\t<div>{directoryId}</div>\n\t\t\t\t<div>{uid}</div>\n\t\t\t</div>\n\t\t);\n\t});\n\n\tconst vislinks = {\n\t\t'Team 1 (RecyclePoints - Nigeria)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team1RecyclePoints-Nigeria',\n\t\t'Team 2 (Kaaro Health - Uganda)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team2KaaroHealth-Uganda',\n\t\t'Team 3 (Expressions - Kenya)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team3Expressions-Kenya',\n\t\t'Team 4 (Rafode - Kenya)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team4Rafode-Kenya',\n\t\t'Team 5 (Ruo and Rui Medical - South Africa)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team5RuoandRuiMedical-SouthAfrica',\n\t\t'Team 6 (Ecobora - Kenya)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team6Ecobora-Kenya',\n\t\t'Team 7 (CODE - Uganda)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team7CODE-Uganda',\n\t\t'Team 8 (Crispvision - Nigeria)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team8Crispvision-Nigeria',\n\t\t'Team 9 (Fort Garlic Farm - Uganda)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team9FortGarlicFarm-Uganda',\n\t\t'Team 10 (East Wind - Nigeria)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/Team10EastWind-Nigeria',\n\t\t'1 Ctrl Alt QUEST - QUEST Honors Program (Kohn)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/1CtrlAltQUEST-QUESTHonorsProgramKohn',\n\t\t'2 Q\\u200brystal Cl\\u200b34\\u200br - ClearSage (Bailey)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/2Qu200brystalClu200b34u200br-ClearSageBailey',\n\t\t'3 QUESTees Care - Casey Cares (Wertman)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/3QUESTeesCare-CaseyCaresWertman',\n\t\t'4 QuestBytes - WorkChew (Kohn)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/4QuestBytes-WorkChewKohn',\n\t\t'5 LochQUEST Monster - Chessie Marine (King)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/5LochQUESTMonster-ChessieMarineKing',\n\t\t'6 mapQUEST - Campus Maps (Armstrong)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/6mapQUEST-CampusMapsArmstrong',\n\t\t'7 Never Second QUEST - Bechtel (King)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/7NeverSecondQUEST-BechtelKing',\n\t\t'8 QUESTainability - UMD Facilities (Bailey)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/8QUESTainability-UMDFacilitiesBailey',\n\t\t'9 Key West - Smith Operations (Armstrong)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/9KeyWest-SmithOperationsArmstrong',\n\t\t'Casey Cares Foundation (Frels)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/CaseyCaresFoundationFrels',\n\t\t\"Children's National Hospital (Dugas)\":\n\t\t\t\"http://valerian.cs.umd.edu:8080/superset/dashboard/Children'sNationalHospitalDugas\",\n\t\t'Leidos (Ashley)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/LeidosAshley',\n\t\t'Materne North America - GoGo squeeZ (Corsi)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/MaterneNorthAmerica-GoGosqueeZCorsi',\n\t\t'Northrop Grumman (A) - Financial Tools (Karake)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/NorthropGrummanA-FinancialToolsKarake',\n\t\t'Northrop Grumman (B) - Supplier Ratings (Armstrong)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/NorthropGrummanB-SupplierRatingsArmstrong',\n\t\t'Oceaneering (Bailey)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/OceaneeringBailey',\n\t\t'Sealed Air (White)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/SealedAirWhite',\n\t\t'Thales (Purtilo)':\n\t\t\t'http://valerian.cs.umd.edu:8080/superset/dashboard/ThalesPurtilo',\n\t\t'Tronox (Basu)': 'http://valerian.cs.umd.edu:8080/superset/dashboard/TronoxBasu',\n\t};\n\n\tconst onoffswitch = state => (\n\t\t<div class=\"onoffswitch\">\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tname=\"onoffswitch\"\n\t\t\t\tclass=\"onoffswitch-checkbox\"\n\t\t\t\tid=\"myonoffswitch\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tchecked={state}\n\t\t\t\tonClick={() => watchGroup(groupname)}\n\t\t\t/>\n\t\t\t<label class=\"onoffswitch-label\" for=\"myonoffswitch\">\n\t\t\t\t<span class=\"onoffswitch-inner\"></span>\n\t\t\t\t<span class=\"onoffswitch-switch\"></span>\n\t\t\t</label>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"group-title\">\n\t\t\t\t<h2\n\t\t\t\t\tclassName=\"group-name\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: `${groupColor}`,\n\t\t\t\t\t\tcolor: '#333',\n\t\t\t\t\t\tborderRadius: '1rem',\n\t\t\t\t\t\tpadding: '1rem',\n\t\t\t\t\t}}>\n\t\t\t\t\t{groupname}\n\t\t\t\t</h2>\n\t\t\t\t{Object.keys(watchedGroups)\n\t\t\t\t\t.map(g => watchedGroups[g].name)\n\t\t\t\t\t.includes(groupname)\n\t\t\t\t\t? onoffswitch(true)\n\t\t\t\t\t: onoffswitch(false)}\n\t\t\t</div>\n\t\t\t<div className=\"info\">\n\t\t\t\t<Collapsible trigger=\"Visualizations\">\n\t\t\t\t\t<iframe\n\t\t\t\t\t\tclassName=\"group-vis\"\n\t\t\t\t\t\ttitle={vislinks[groupname]}\n\t\t\t\t\t\twidth=\"97%\"\n\t\t\t\t\t\theight=\"600px\"\n\t\t\t\t\t\tseamless\n\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\tscrolling=\"yes\"\n\t\t\t\t\t\tsrc={vislinks[groupname]}></iframe>\n\t\t\t\t</Collapsible>\n\t\t\t\t<Collapsible trigger=\"Students\">\n\t\t\t\t\t<div className=\"studentsInGroup\">{students}</div>\n\t\t\t\t</Collapsible>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Group;\n","import React, { useState, useEffect } from 'react';\nimport { NavLink, Route, useParams, useRouteMatch } from 'react-router-dom';\nimport Collapsible from 'react-collapsible';\nimport Group from './Group';\nimport { fetchAllGroups, fetchGroupsInClass } from '../utils/fetch';\nimport { pink } from '@material-ui/core/colors';\n\nconst Class = () => {\n\tconst [groupsInClass, setGroups] = useState({});\n\tconst [active, setActive] = useState(null);\n\tconst { classID } = useParams();\n\tconst { url } = useRouteMatch();\n\tconst [expanded, setExpanded] = useState(false);\n\n\tconst [nameOfClass, setNameOfClass] = useState('');\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tif (classID === 'all') await fetchAllGroups().then(data => setGroups(data));\n\t\t\telse await fetchGroupsInClass(classID).then(data => setGroups(data));\n\t\t})();\n\t\tsetActive(null);\n\t\tsetNameOfClass(classID.toString().toUpperCase());\n\t}, [url, classID]);\n\n\tfunction collapse() {\n\t\tif (document.querySelector('.info').style.visibility == 'hidden') {\n\t\t\tsetNameOfClass(classID.toString().toUpperCase());\n\t\t\tdocument.querySelector('.info').style.height = 'auto';\n\t\t\tdocument.querySelector('.info').style.visibility = 'visible';\n\t\t\tdocument.querySelector('.info').style.overflow = 'visible';\n\t\t\tdocument.querySelector('.info').style.opacity = '1';\n\t\t\tdocument.querySelector('.info').style.transition = 'all 1.5s ease';\n\t\t\tdocument.getElementById('title').innerHTML =\n\t\t\t\t\"<div style='display: flex; align-items: center;'>\" +\n\t\t\t\t// `${nameOfClass}`;\n\t\t\t\t'<span style=\"font-size: 1.5rem; margin: 0rem 0.5rem; font-weight: 400; \">(Click to collapse)</span>' +\n\t\t\t\t'</div>';\n\t\t\tdocument.getElementById('title').style.marginBottom = '2rem';\n\t\t\tdocument.getElementById('title').style.fontWeight = '700';\n\t\t} else {\n\t\t\tdocument.querySelector('.info').style.visibility = 'hidden';\n\t\t\tdocument.querySelector('.info').style.height = '0rem';\n\t\t\tdocument.querySelector('.info').style.overflow = 'hidden';\n\t\t\tdocument.querySelector('.info').style.opacity = '0';\n\t\t\tdocument.querySelector('.info').style.transition = 'all 1.5s ease';\n\t\t\tdocument.getElementById('title').innerHTML =\n\t\t\t\t'Click <span style=\"color:indianred; font-weight: bold; letter-spacing: 0.05rem\">Here</span> to Open Class Details';\n\t\t\tdocument.getElementById('title').style.marginBottom = '0rem';\n\t\t\tdocument.getElementById('title').style.fontWeight = '400';\n\t\t}\n\t}\n\n\tconst groupsInClassData = Object.keys(groupsInClass).map(g => {\n\t\tconst { groupId, name, className, watch, groupHealth } = groupsInClass[g];\n\t\tlet cssClass = active === groupId ? 'groupInClass active' : 'groupInClass';\n\n\t\tswitch (groupHealth) {\n\t\t\tcase 1:\n\t\t\t\tcssClass += ' red';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcssClass += ' yellow';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcssClass += ' green';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcssClass += '';\n\t\t}\n\n\t\treturn (\n\t\t\t<NavLink\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetActive(groupId);\n\t\t\t\t\tcollapse();\n\t\t\t\t}}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tkey={groupId}\n\t\t\t\tto={`${url}/${name}`}>\n\t\t\t\t{name}\n\t\t\t</NavLink>\n\t\t);\n\t});\n\n\t// console.log(document.getElementsByClassName('class-iframe')[0]);\n\treturn (\n\t\t<div>\n\t\t\t<h2 id=\"title\" onClick={() => collapse()}>\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\n\t\t\t\t\t{/* {nameOfClass} */}\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{ fontSize: '1.5rem', margin: '0rem 0.5rem', fontWeight: '400' }}>\n\t\t\t\t\t\t(Click to collapse)\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</h2>\n\t\t\t<div className=\"info\">\n\t\t\t\t<Collapsible trigger=\"Visualizations\">\n\t\t\t\t\t<div className=\"vis\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\tclassName=\"class-iframe\"\n\t\t\t\t\t\t\t\ttitle={classID}\n\t\t\t\t\t\t\t\twidth=\"97%\"\n\t\t\t\t\t\t\t\theight=\"700\"\n\t\t\t\t\t\t\t\tborder=\"none\"\n\t\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\t\tscrolling=\"yes\"\n\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\tclassID !== 'all'\n\t\t\t\t\t\t\t\t\t\t? `http://valerian.cs.umd.edu:8080/superset/dashboard/${classID}`\n\t\t\t\t\t\t\t\t\t\t: `http://valerian.cs.umd.edu:8080/superset/dashboard/classes`\n\t\t\t\t\t\t\t\t}></iframe>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</Collapsible>\n\t\t\t\t<Collapsible trigger=\"Groups\">\n\t\t\t\t\t<div className=\"classAllGroups\">\n\t\t\t\t\t\t<div className=\"groupsInClass\"> {groupsInClassData} </div>\n\t\t\t\t\t</div>\n\t\t\t\t</Collapsible>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<Route exact path={`${url}/:groupname`}>\n\t\t\t\t<Group />\n\t\t\t</Route>\n\t\t</div>\n\t);\n};\n\nexport default Class;\n","import React, {  lazy, Suspense, Spinner, useState, useEffect } from 'react';\nimport { NavLink, Route, useRouteMatch } from 'react-router-dom';\n\nimport Class from './Class';\nimport { fetchAllClasses } from '../utils/fetch';\n\n\nconst Classes = () => {\n\tconst [classes, setClasses] = useState({});\n\tconst [active, setActive] = useState('all');\n\tconst { url } = useRouteMatch();\n\tconst [loaded, setLoaded] = useState(false);\n\n\n\tuseEffect(() => {\n\t\t(async () => await fetchAllClasses().then(data => {setClasses(data); setLoaded(true);}))();\n\t\tsetActive('all');\n\t}, [url]);\n\n\tvar classesData = Object.keys(classes).map(c => {\n\t\tconst name = classes[c].className.toString();\n\t\tconst className = active === name ? 'class active-class' : 'class';\n\t\treturn (\n\t\t\t<NavLink\n\t\t\t\tonClick={() => setActive(name)}\n\t\t\t\tclassName={className}\n\t\t\t\tkey={name}\n\t\t\t\tto={`${url}/${name}`}>\n\t\t\t\t{name}\n\t\t\t</NavLink>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Classes</h1>\n\n\t\t\t<Route exact path={url}>\n\t\t\t\t<div className=\"classes\">\n\t\t\t\t\t{loaded && (<NavLink className=\"class\" to={`${url}/all`}>\n\t\t\t\t\t\tAll\n\t\t\t\t\t</NavLink>)}\n\t\t\t\t\t\t{classesData}\n\t\t\t\t</div>\n\t\t\t</Route>\n\n\t\t\t<Route path={`${url}/:classID`}>\n\t\t\t\t<div className=\"classes\">\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tonClick={() => setActive('all')}\n\t\t\t\t\t\tclassName={active === 'all' ? 'class active-class' : 'class'}\n\t\t\t\t\t\tto={`${url}/all`}>\n\t\t\t\t\t\tAll\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t{classesData}\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<Class />\n\t\t\t</Route>\n\t\t</div>\n\t);\n};\n\nexport default Classes;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { postSurvey } from '../utils/fetch';\n\nfunction SurveyInstructor() {\n\tconst [questions, setQuestions] = useState([]);\n\tconst [surveyClass, setSurveyClass] = useState(null);\n\tlet history = useHistory();\n\n\tconst [saved, setSaved] = useState(false);\n\tconst [classSelected, setClassSelected] = useState(false);\n\n\tconst handleQuestionInput = (index, e) => {\n\t\tconst allQuestions = [...questions];\n\t\tallQuestions[index]['question'] = e.target.value;\n\t\tsetQuestions(allQuestions);\n\t};\n\n\tconst handleSave = async e => {\n\t\tif (classSelected) {\n\t\t\tlet empty = false;\n\t\t\tfor (let i = 0; i < questions.length; i++) {\n\t\t\t\tconsole.log(questions[i]['question']);\n\t\t\t\tif (questions[i]['question'].trim() === '') empty = true;\n\t\t\t}\n\t\t\tif (!empty) {\n\t\t\t\tawait postSurvey(questions, surveyClass.toString().toUpperCase());\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleAdd = () => {\n\t\tsetQuestions([...questions, { question: '' }]);\n\t};\n\n\tconst handleRemove = index => {\n\t\tconst allQuestions = [...questions];\n\t\tallQuestions.splice(index, 1);\n\t\tsetQuestions(allQuestions);\n\t};\n\n\tconst handleSelectClass = e => {\n\t\tsetClassSelected(true);\n\t\tsetSurveyClass(e.target.value);\n\t};\n\n\tconst selectClass = (\n\t\t<div className=\"selectclass\" onChange={e => handleSelectClass(e)}>\n\t\t\t<div>\n\t\t\t\t<input type=\"radio\" value=\"All\" name=\"class\" /> All\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input type=\"radio\" value=\"BMGT390H\" name=\"class\" /> BMGT390H\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input type=\"radio\" value=\"BMGT438A\" name=\"class\" /> BMGT438A\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input type=\"radio\" value=\"BMGT490H\" name=\"class\" /> BMGT490H\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className=\"survey-instructor\">\n\t\t\t<h1>Survey</h1>\n\t\t\t<div className=\"container\">\n\t\t\t\t{questions.length == 0 ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"add-button-text\" onClick={handleAdd}>\n\t\t\t\t\t\t\tCreate New Survey\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\tclassName=\"class-iframe\"\n\t\t\t\t\t\t\ttitle=\"test\"\n\t\t\t\t\t\t\twidth=\"97%\"\n\t\t\t\t\t\t\theight=\"700\"\n\t\t\t\t\t\t\tborder=\"none\"\n\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\tscrolling=\"yes\"\n\t\t\t\t\t\t\tsrc=\"http://valerian.cs.umd.edu:8080/superset/dashboard/surveyresponses\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{!classSelected ? (\n\t\t\t\t\t\t\t<div className=\"warning warningClass\">Please select a class.</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{selectClass}\n\t\t\t\t\t\t<form onSubmit={handleSave}>\n\t\t\t\t\t\t\t{questions.map((Question, index) => (\n\t\t\t\t\t\t\t\t<div key={index} className=\"question\">\n\t\t\t\t\t\t\t\t\t<div className=\"question-number\">{index + 1}: </div>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"question\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-input\"\n\t\t\t\t\t\t\t\t\t\tvalue={Question.question}\n\t\t\t\t\t\t\t\t\t\tonChange={e => handleQuestionInput(index, e)}\n\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\tindex == 0 ? 'There is enough time to complete homework.' : ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<div className=\"remove-button\" onClick={() => handleRemove(index)}>\n\t\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className=\"add-button\" onClick={handleAdd}>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"save-button\" onClick={handleSave}>\n\t\t\t\t\t\t\tClear Existing Responses and Send New Survey\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{!saved ? (\n\t\t\t\t\t\t\t<div className=\"warning\">\n\t\t\t\t\t\t\t\tWarning: your questions will not be saved until you press the button\n\t\t\t\t\t\t\t\tabove\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<p>\n\t\t\t\tIn this page, you can create a new survey for the students to take.\n\t\t\t\t<br />\n\t\t\t\t<span className=\"subtext\">\n\t\t\t\t\tThe students will answer each of your questions according to the{' '}\n\t\t\t\t\t<em>Likert scale</em>, specifically with the following five options — <br />\n\t\t\t\t\t<em>Strongly Disagree, Disagree, Neutral, Agree, and Strongly Agree.</em>\n\t\t\t\t</span>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<span className=\"please\">\n\t\t\t\t\tNote: If any of the classes you have chosen already have a current survey, it\n\t\t\t\t\twill be erased and replaced with this one.\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default SurveyInstructor;\n","import React, { useState, useEffect } from 'react';\n\nimport {\n\tfetchSurvey,\n\tpostSurveyStudentAnswers,\n\tgetClassesofStudent,\n} from '../utils/fetch';\n\nfunction SurveyStudent(props) {\n\tconst [answers, setAnswers] = useState({});\n\n\tconst [selectedClass, setSelectedClass] = useState('');\n\tconst [classes, setClasses] = useState([]);\n\tconst [questions, setQuestions] = useState([]);\n\n\tconst [responded, setResponded] = useState({});\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tlet data = await getClassesofStudent();\n\t\t\tlet qs = [],\n\t\t\t\tcs = [];\n\t\t\tawait data.forEach(async c => {\n\t\t\t\tconst classname = c['className'];\n\t\t\t\tconst questionObjects = await fetchSurvey(classname);\n\t\t\t\tqs = [...qs, ...questionObjects];\n\t\t\t\tcs = [...cs, classname];\n\t\t\t\tsetQuestions(qs);\n\t\t\t\tsetClasses(cs);\n\t\t\t});\n\t\t})();\n\t}, []);\n\n\tconst handleSave = e => {\n\t\te.preventDefault();\n\t\tconsole.log(answers, 'here are answers');\n\t\tpostSurveyStudentAnswers(selectedClass, answers[selectedClass], props.token);\n\n\t\tlet newResponded = responded;\n\t\tnewResponded[selectedClass] = true;\n\t\tsetResponded(newResponded);\n\t\tconsole.log(responded);\n\t};\n\n\tconst handleAnswer = (e, index) => {\n\t\tconst allAnswers = answers;\n\t\tallAnswers[selectedClass][index] = { answer: e.target.value };\n\t\tsetAnswers(allAnswers);\n\t};\n\n\tconst handleClassID = e => {\n\t\tconst select = e.target.value;\n\t\tsetSelectedClass(select);\n\t\tlet newAnswers = answers;\n\t\tnewAnswers[select] = [];\n\t\tsetAnswers(newAnswers);\n\t\tconsole.log('setting answers to empty');\n\t};\n\n\t//TODO: IF STUDENT DOESNT SELECT NEW ANSWER IN A NEW CLASS, IT DOESNT WORK\n\n\tconst surveyQuestions = classname => {\n\t\tlet index = -1;\n\t\tlet q = questions.map(q => {\n\t\t\tif (q['className'] == classname) {\n\t\t\t\tlet question = q['question'];\n\t\t\t\tindex++;\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index} className=\"question-student\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"question-number-student\">{index + 1}: </div>\n\t\t\t\t\t\t\t<div className=\"question-text\">{question}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"likert\" onChange={e => handleAnswer(e, index)}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input className=\"answer\" type=\"radio\" name={index} value=\"1\" />{' '}\n\t\t\t\t\t\t\t\tStrongly Disagree\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input className=\"answer\" type=\"radio\" name={index} value=\"2\" />{' '}\n\t\t\t\t\t\t\t\tDisagree\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input className=\"answer\" type=\"radio\" name={index} value=\"3\" /> Neutral\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input className=\"answer\" type=\"radio\" name={index} value=\"4\" /> Agree\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input className=\"answer\" type=\"radio\" name={index} value=\"5\" />{' '}\n\t\t\t\t\t\t\t\tStrongly Agree\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn q;\n\t};\n\n\treturn (\n\t\t<div className=\"container-student\">\n\t\t\t<h1>Survey</h1>\n\t\t\t<form onSubmit={handleSave}>\n\t\t\t\t<div className=\"general\">\n\t\t\t\t\t<div className=\"title\">Class: </div>\n\t\t\t\t\t<select name=\"classid\" className=\"classid\" onChange={e => handleClassID(e)}>\n\t\t\t\t\t\t<option value=\"none\">Select A Class...</option>\n\t\t\t\t\t\t{classes.map(c => (\n\t\t\t\t\t\t\t<option value={c}>{c}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t{surveyQuestions(selectedClass)}\n\t\t\t</form>\n\t\t\t<div className=\"save-button\" onClick={handleSave}>\n\t\t\t\tSave\n\t\t\t</div>\n\t\t\t{responded[selectedClass] ? (\n\t\t\t\t<div>You have submitted this survey.</div>\n\t\t\t) : (\n\t\t\t\t<div></div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default SurveyStudent;\n","export default __webpack_public_path__ + \"static/media/about.2307514f.svg\";","import React from 'react';\nimport image from '../about.svg';\nconst About = () => {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<h1>About</h1>\n\t\t\t<img src={image} />\n\t\t\t<div>\n\t\t\t\t<h2>About QUESTmetrics</h2>\n\t\t\t\t<p>\n\t\t\t\t\tThis product allows instructors in the QUEST Honors Program to track the\n\t\t\t\t\thealth of the groups in their classes.\n\t\t\t\t</p>\n\t\t\t\t<br />\n\n\t\t\t\t<p className=\"subtext\">\n\t\t\t\t\tThere are 5 different components that create each team metric: individual's\n\t\t\t\t\tgrades on ELMs, the last time the student has checked the class ELMs page, the\n\t\t\t\t\tpercentage of late assignments, the group's activity on Slack and the total\n\t\t\t\t\tresponses from a class distrubuted survey.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<a href=\"http://valerian.cs.umd.edu:8001/\" target=\"_blank\">\n\t\t\t\tVisit Our Advertisement!\n\t\t\t</a>\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { fetchWeight, postMetrics, postWeight, deleteWeight } from '../utils/fetch';\nimport { useHistory } from 'react-router-dom';\n\nconst Settings = () => {\n\tconst [metrics, setMetrics] = useState({});\n\tconst [loaded, setLoaded] = useState(false);\n\tconst { url } = useRouteMatch();\n\n\tuseEffect(() => {\n\t\t(async () =>\n\t\t\tawait fetchWeight().then(data => {\n\t\t\t\tsetMetrics(data);\n\t\t\t\tsetLoaded(true);\n\t\t\t}))();\n\t}, [url]);\n\n\tconst handleWeightChange = e => {\n\t\tconst isNumeric = str => {\n\t\t\tif (typeof str != 'string') return false;\n\t\t\treturn !isNaN(str);\n\t\t};\n\t\tif (isNumeric(e.target.value)) {\n\t\t\tlet newMetrics = { ...metrics };\n\t\t\tnewMetrics[e.target.name] = e.target.value;\n\t\t\tsetMetrics(newMetrics);\n\t\t}\n\t};\n\n\tconst removeElements = elms => elms.forEach(el => el.remove());\n\n\tconst postWeights = async e => {\n\t\te.preventDefault();\n\t\tdocument.querySelector('.success').innerHTML = '';\n\t\tvar sum = Object.values(metrics).reduce(function (a, b) {\n\t\t\treturn Number(a) + Number(b);\n\t\t}, 0);\n\t\tconsole.log(sum);\n\t\tif (sum === 100 || sum === '100') {\n\t\t\t(async () => await postWeight(metrics))();\n\t\t\tremoveElements(document.querySelectorAll('.errormessage'));\n\t\t\tpostMetrics();\n\t\t\tlet success = document.querySelector('.successmessage');\n\t\t\tif (success == null) {\n\t\t\t\tsuccess = document.createElement('h3');\n\t\t\t\tsuccess.className = 'successmessage';\n\t\t\t\tsuccess.innerText = `Your weights have been recorded.`;\n\t\t\t\tsuccess.style = ` color: green; margin-left: 0.6rem;line-height: 2.5rem; `;\n\t\t\t\tdocument.querySelector('.settings').appendChild(success);\n\t\t\t} else {\n\t\t\t\tsuccess.innerText = `Your weights have been recorded.`;\n\t\t\t}\n\t\t\t//REDIRECT\n\t\t} else {\n\t\t\tlet error = document.querySelector('.errormessage');\n\t\t\tremoveElements(document.querySelectorAll('.successmessage'));\n\t\t\tif (error == null) {\n\t\t\t\tdocument.querySelector('.success').innerHTML = '';\n\t\t\t\terror = document.createElement('h3');\n\t\t\t\terror.className = 'errormessage';\n\t\t\t\terror.innerText = `ERROR:\\nYour values do not add up to a 100, but they instead add up to ${sum}. Your weights have not been saved!\\nPlease fix your weights and try again.`;\n\t\t\t\terror.style = ` color: red; margin-left: 0.6rem;line-height: 2.5rem; `;\n\t\t\t\tdocument.querySelector('.settings').appendChild(error);\n\t\t\t} else {\n\t\t\t\terror.innerText = `ERROR:\\nYour values do not add up to a 100, but they instead add up to ${sum}. Your weights have not been saved!\\nPlease fix your weights and try again.`;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst update = e => {\n\t\tpostWeights(e);\n\t};\n\n\n\tconst deleteWeights = e => {\n\t\tremoveElements(document.querySelectorAll('.successmessage'));\n\t\tremoveElements(document.querySelectorAll('.errormessage'));\n\t\tlet newMetrics = { ...metrics };\n\t\tnewMetrics[\"slack\"] = 20;\n\t\tnewMetrics[\"grades\"] = 15;\n\t\tnewMetrics[\"lateness\"] = 17.5;\n\t\tnewMetrics[\"survey\"] = 30;\n\t\tnewMetrics[\"lastView\"] = 17.5;\n\t\tsetMetrics(newMetrics);\n\t};\n\n\tconst settings = Object.keys(metrics).map(metric => (\n\t\t<div key={metric} className=\"metrics\">\n\t\t\t<div className=\"metric\">{metric.charAt(0).toUpperCase() + metric.slice(1)}</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname={metric}\n\t\t\t\tclassName=\"weight\"\n\t\t\t\tvalue={metrics[metric]}\n\t\t\t\tonChange={e => handleWeightChange(e)}\n\t\t\t/>\n\t\t</div>\n\t));\n\n\treturn (\n\t\t<div className=\"settingsPage\">\n\t\t\t<h1 className=\"settings-title\">Settings</h1>\n\t\t\t<div className=\"settings\">\n\t\t\t\t{settings}\n\t\t\t\t{loaded && (\n\t\t\t\t\t<div className=\"save-metrics\" onClick={update}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<p className=\"success\"> </p>\n\t\t\t</div>\n\n\t\t\t<div className = \"description\">\n\t\t\t<p>\n\t\t\t\tIn this page, you can change the weights of each element included in the\n\t\t\t\tcalculation of the metrics.\n\t\t\t\t<br />\n\t\t\t\t<span className=\"subtext\">\n\t\t\t\t\tThis allows you to customize the calculated health of each team.\n\t\t\t\t</span>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<span className=\"please\">\n\t\t\t\t\tPlease ensure that your calculations add up to 100.\n\t\t\t\t</span>\n\t\t\t</p>\n\n\t\t\t<div className= \"default-button\" onClick={deleteWeights}>\n\t\t\t\t\tDefault Metrics\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};\n\nexport default Settings;\n","import React from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\n// components\nimport Home from './Home';\nimport Classes from './Classes';\nimport SurveyInstructor from './SurveyInstructor';\nimport SurveyStudent from './SurveyStudent';\nimport About from './About';\nimport Settings from './Settings';\n\n// icons\nimport { AiFillHome } from 'react-icons/ai';\nimport { HiUserGroup } from 'react-icons/hi';\nimport { RiSurveyFill } from 'react-icons/ri';\nimport { GoSettings } from 'react-icons/go';\nimport { VscInfo } from 'react-icons/vsc';\n\n// Navbar\nconst Navbar = () => (\n\t<div className=\"navbar\">\n\t\t<ul className=\"navbar-nav\">\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<NavLink exact className=\"nav-link\" to=\"/\">\n\t\t\t\t\t<AiFillHome />\n\t\t\t\t\t<div className=\"label\">Home</div>\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<NavLink className=\"nav-link\" to=\"/classes\">\n\t\t\t\t\t<HiUserGroup />\n\t\t\t\t\t<div className=\"label\">Classes</div>\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<NavLink exact className=\"nav-link\" to=\"/survey-instructor\">\n\t\t\t\t\t<RiSurveyFill />\n\t\t\t\t\t<div className=\"label\">Survey</div>\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<NavLink exact className=\"nav-link\" to=\"/about\">\n\t\t\t\t\t<VscInfo />\n\t\t\t\t\t<div className=\"label\">About</div>\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<NavLink exact className=\"nav-link\" to=\"/settings\">\n\t\t\t\t\t<GoSettings />\n\t\t\t\t\t<div className=\"label\">Settings</div>\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n);\n\nconst routes = [\n\t{ path: '/classes', name: 'Classes', Component: Classes },\n\t{\n\t\tpath: '/survey-instructor',\n\t\tname: 'Instructor Survey',\n\t\tComponent: SurveyInstructor,\n\t},\n\t{ path: '/about', name: 'About', Component: About },\n\t{ path: '/settings', name: 'Settings', Component: Settings },\n\t{ path: '/', name: 'Home', Component: Home },\n];\n\nexport default function Main(props) {\n\tconst page = props => {\n\t\tif (props.privilege == 2) {\n\t\t\treturn <SurveyStudent token={props.token} />;\n\t\t}\n\t\tif (props.privilege == 0) return <div></div>;\n\t\tif (props.privilege == 1) {\n\t\t\treturn (\n\t\t\t\t<div className=\"dashboard\">\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t{routes.map(({ path, Component }, key) => (\n\t\t\t\t\t\t\t\t\t<Route path={path} key={key}>\n\t\t\t\t\t\t\t\t\t\t<Component />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Route>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn <div>{page(props)}</div>;\n}\n","import React, {useEffect} from 'react'\n\nexport function usePersistedState(key, defaultValue) {\n  const [state, setState] = React.useState(\n    localStorage.getItem(key) || defaultValue\n  );\n  useEffect(() => {\n    localStorage.setItem(key, state);\n  }, [key, state]);\n  return [state, setState];\n}","import React, { useState, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport jwt_decode from 'jwt-decode';\n\nimport { useRouteMatch, Route } from 'react-router-dom';\n\nimport Main from './Main';\nimport { usePersistedState } from '../utils/usePersistedState';\n\nconst App = () => {\n  const [id, setId] = useState('');\n  const [privilege, setPrivilege] = usePersistedState('privilege', 0); // 0 is nothing, 1 is student, 2 is admin\n  const { url } = useRouteMatch();\n\n  const [token, setToken] = usePersistedState('token', '');\n\n  const onSignIn = googleUser => {\n    var profile = googleUser.getBasicProfile();\n    var splitEmail = profile.getEmail().split('@');\n    if (\n      splitEmail[1] === 'terpmail.umd.edu' ||\n      splitEmail[1] === 'g.umd.edu' ||\n      splitEmail[1] === 'umd.edu'\n    ) {\n      setId(splitEmail[0]);\n    } else {\n      onFail();\n    }\n  };\n\n  const onFail = () => {\n    alert('You must sign in with a VALID UMD email');\n  };\n\n  const fetchToken = async id => {\n    const token_url = `http://valerian.cs.umd.edu:5000/auth?key=katcBDCk0UhDDUjvfQxoaZNxFAwNZLZl&directoryId=${id}`;\n    await fetch(token_url, { method: 'GET' })\n      .then(res => res.json())\n      .then(r => r['access_token'])\n      .then(token => {\n        setToken(token);\n        const access_token = jwt_decode(token)['identity']['privilege'];\n        if (access_token === 'admin') setPrivilege(1);\n        else setPrivilege(2);\n      });\n  };\n\n  useEffect(() => {\n    if (id !== '') fetchToken(id);\n  }, [token, id]);\n\n  const loginstyle = {\n    height: '100vh',\n    width: '100%',\n    background: 'black',\n    display: 'flex',\n    justifyContent: 'center',\n    textAlign: 'center',\n    alignItems: 'center',\n  };\n\n  const loginbutton = {\n    color: 'white',\n    background: '#CF102D',\n    fontSize: '2rem',\n    // height: '2rem',\n    padding: '2rem',\n    borderRadius: '3rem',\n    cursor: 'pointer',\n  };\n\n  return (\n    <div>\n      <Route path={url}>\n        {privilege === 0 ? (\n          <div style={loginstyle}>\n            <GoogleLogin\n              clientId=\"497269533533-jnl5jihqvnmhjadhf7pf2ckl9sej21ja.apps.googleusercontent.com\"\n              buttonText=\"Login\"\n              onSuccess={onSignIn}\n              onFailure={onFail}\n              render={renderProps => (\n                <div\n                  style={loginbutton}\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}>\n                  Log In Through UMD CAS\n                </div>\n              )}\n            />\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </Route>\n\n      <Main privilege={privilege} token={token} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './pages/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}